/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, TravelTag as PrismaTravelTag } from "@prisma/client";

export class TravelTagServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.TravelTagCountArgs, "select">
  ): Promise<number> {
    return this.prisma.travelTag.count(args);
  }

  async travelTags<T extends Prisma.TravelTagFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.TravelTagFindManyArgs>
  ): Promise<PrismaTravelTag[]> {
    return this.prisma.travelTag.findMany<Prisma.TravelTagFindManyArgs>(args);
  }
  async travelTag<T extends Prisma.TravelTagFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.TravelTagFindUniqueArgs>
  ): Promise<PrismaTravelTag | null> {
    return this.prisma.travelTag.findUnique(args);
  }
  async createTravelTag<T extends Prisma.TravelTagCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.TravelTagCreateArgs>
  ): Promise<PrismaTravelTag> {
    return this.prisma.travelTag.create<T>(args);
  }
  async updateTravelTag<T extends Prisma.TravelTagUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.TravelTagUpdateArgs>
  ): Promise<PrismaTravelTag> {
    return this.prisma.travelTag.update<T>(args);
  }
  async deleteTravelTag<T extends Prisma.TravelTagDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.TravelTagDeleteArgs>
  ): Promise<PrismaTravelTag> {
    return this.prisma.travelTag.delete(args);
  }
}
